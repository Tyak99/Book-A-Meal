{"version":3,"sources":["../../controllers/order.js"],"names":["Order","Model","exports","create","req","res","body","price","meals","delivery_address","send","status","error","order_status","userId","catererId","then","order","data","catch","editOrder","findById","params","id","update","allOrders","findAll","where","orders"],"mappings":"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","sourcesContent":["import Model from '../models';\n\nconst { Order } = Model;\n\nexports.create = (req, res) => {\n  if (!req.body.price || !req.body.meals || !req.body.delivery_address ) {\n    return res.send({\n      status: 400,\n      error: 'Order data is not complete',\n    });\n  }\n  Order.create({\n    price: req.body.price,\n    order_status: req.body.order_status,\n    delivery_address: req.body.delivery_address,\n    meals: req.body.meals,\n    userId: req.body.userId,\n    catererId: req.body.catererId,\n  })\n    .then(order => res.send({\n      status: 201,\n      data: order,\n    }))\n    .catch(error => res.send(error));\n};\n\nexports.editOrder = (req, res) => {\n  Order.findById(req.params.id).then((order) => {\n    if (!order) {\n      return res.send({\n        status: 400,\n        error: 'No order with that id found',\n      });\n    }\n    return order\n      .update({\n        price: req.body.price,\n        order_status: req.body.order_status || order.status,\n        delivery_address: req.body.delivery_address || order.delivery_address,\n        meals: req.body.meals || order.meals,\n      })\n      .then(() => res.send({\n        status: 204,\n        data: order,\n      }))\n      .catch(error => res.send({\n        status: 400,\n        error,\n      }));\n  });\n};\n\nexports.allOrders = (req, res) => {\n  Order.findAll({\n    where: {\n      catererId: req.params.id,\n    },\n  })\n    .then(orders => res.send({\n      status: 200,\n      data: orders,\n    }))\n    .catch(error => res.send({ status: 400, error }));\n};\n"],"file":"order.js"}