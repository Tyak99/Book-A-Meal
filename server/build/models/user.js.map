{"version":3,"sources":["../../models/user.js"],"names":["module","exports","sequelize","DataTypes","User","define","firstName","type","STRING","allowNull","lastName","email","password","address","associate","models","belongsTo","Role","foreignKey","hasMany","Meal","as","Menu","Order"],"mappings":";;AAAA;AACAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AACzC,MAAMC,IAAI,GAAGF,SAAS,CAACG,MAAV,CACX,MADW,EAEX;AACEC,IAAAA,SAAS,EAAE;AACTC,MAAAA,IAAI,EAAEJ,SAAS,CAACK,MADP;AAETC,MAAAA,SAAS,EAAE;AAFF,KADb;AAMEC,IAAAA,QAAQ,EAAEP,SAAS,CAACK,MANtB;AAOEG,IAAAA,KAAK,EAAE;AACLJ,MAAAA,IAAI,EAAEJ,SAAS,CAACK,MADX;AAELC,MAAAA,SAAS,EAAE;AAFN,KAPT;AAWEG,IAAAA,QAAQ,EAAE;AACRL,MAAAA,IAAI,EAAEJ,SAAS,CAACK,MADR;AAERC,MAAAA,SAAS,EAAE;AAFH,KAXZ;AAeEI,IAAAA,OAAO,EAAEV,SAAS,CAACK;AAfrB,GAFW,CAAb;;AAoBAJ,EAAAA,IAAI,CAACU,SAAL,GAAiB,UAAUC,MAAV,EAAkB;AACjC;AACAX,IAAAA,IAAI,CAACY,SAAL,CAAeD,MAAM,CAACE,IAAtB,EAA4B;AAC1BC,MAAAA,UAAU,EAAE;AADc,KAA5B;AAGAd,IAAAA,IAAI,CAACe,OAAL,CAAaJ,MAAM,CAACK,IAApB,EAA0B;AACxBF,MAAAA,UAAU,EAAE,WADY;AAExBG,MAAAA,EAAE,EAAE;AAFoB,KAA1B;AAIAjB,IAAAA,IAAI,CAACe,OAAL,CAAaJ,MAAM,CAACO,IAApB,EAA0B;AACxBJ,MAAAA,UAAU,EAAE,WADY;AAExBG,MAAAA,EAAE,EAAE;AAFoB,KAA1B;AAIAjB,IAAAA,IAAI,CAACe,OAAL,CAAaJ,MAAM,CAACQ,KAApB,EAA2B;AACzBL,MAAAA,UAAU,EAAE,QADa;AAEzBG,MAAAA,EAAE,EAAE;AAFqB,KAA3B;AAID,GAjBD;;AAkBA,SAAOjB,IAAP;AACD,CAxCD","sourcesContent":["/* eslint-disable func-names */\nmodule.exports = (sequelize, DataTypes) => {\n  const User = sequelize.define(\n    'User',\n    {\n      firstName: {\n        type: DataTypes.STRING,\n        allowNull: false,\n      },\n\n      lastName: DataTypes.STRING,\n      email: {\n        type: DataTypes.STRING,\n        allowNull: false,\n      },\n      password: {\n        type: DataTypes.STRING,\n        allowNull: false,\n      },\n      address: DataTypes.STRING,\n    },\n  );\n  User.associate = function (models) {\n    // associations can be defined here\n    User.belongsTo(models.Role, {\n      foreignKey: 'roleId',\n    });\n    User.hasMany(models.Meal, {\n      foreignKey: 'catererId',\n      as: 'meals',\n    });\n    User.hasMany(models.Menu, {\n      foreignKey: 'catererId',\n      as: 'menus',\n    });\n    User.hasMany(models.Order, {\n      foreignKey: 'userId',\n      as: 'orders',\n    });\n  };\n  return User;\n};\n"],"file":"user.js"}