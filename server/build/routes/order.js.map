{"version":3,"sources":["../../routes/order.js"],"names":["router","requireAuth","passport","authenticate","session","get","orderController","allOrders","post","create","put","editOrder"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,MAAM,GAAG,uBAAf;;AAEA,IAAMC,WAAW,GAAGC,kBAASC,YAAT,CAAsB,KAAtB,EAA6B;AAAEC,EAAAA,OAAO,EAAE;AAAX,CAA7B,CAApB;AAEA;;;;;;;;;;;;;;;;;;;AAmBA;;;;;;;;;;;;;;;;;;;;;AAqBA;;;;;;;;;;;;;;;;;;;;;AAqBA;;;;;;;;;;;;;;;;;;;;;;;AAuBAJ,MAAM,CAACK,GAAP,CAAW,cAAX,EAA2BJ,WAA3B,EAAwCK,eAAgBC,SAAxD;AACAP,MAAM,CAACQ,IAAP,CAAY,GAAZ,EAAiBP,WAAjB,EAA8BK,eAAgBG,MAA9C;AACAT,MAAM,CAACU,GAAP,CAAW,MAAX,EAAmBT,WAAnB,EAAgCK,eAAgBK,SAAhD;eACeX,M","sourcesContent":["import express from 'express';\nimport passport from 'passport';\nimport passportService from '../services/passport';\nimport orderController from '../controllers/order';\n\nconst router = express();\n\nconst requireAuth = passport.authenticate('jwt', { session: false });\n\n/**\n * @swagger\n * definitions:\n *   Order:\n *     properties:\n *       price:\n *         type: integer\n *       order_status:\n *         type: string\n *       delivery_address:\n *         type: string\n *       meals:\n *         type: array\n *       userId:\n *         type: integer\n *       catererId:\n *         type: integer\n */\n\n/**\n * @swagger\n * /api/v1/order/caterer/{id}:\n *   get:\n *     summary: List all the orders by caterer id\n *     description: Returns a list of all order a caterer recieved\n *     tags:\n *       - Order\n *     parameters:\n *       - name: id\n *         description: Caterer's id\n *         in: path\n *         required: true\n *         type: integer\n *     responses:\n *       200:\n *         description: An array of orders\n *         schema:\n *           $ref: '#/definitions/Order'\n */\n\n/**\n * @swagger\n * /api/v1/order:\n *   post:\n *     tags:\n *       - Order\n *     description: Post a new order\n *     produces:\n *       - application/json\n *     parameters:\n *       - name: Order\n *         description: Order object\n *         in: body\n *         required: true\n *         schema:\n *           $ref: '#/definitions/Order'\n *     responses:\n *       201:\n *         description: Successfully created\n */\n\n/**\n * @swagger\n * /api/v1/order/{id}:\n *   put:\n *     tags:\n *       - Order\n *     description: Updates a single order\n *     produces:\n *       - application/json\n *     parameters:\n *       - name: Order\n *         description: Order field to be updated\n *         in: body\n *         schema:\n *            $ref: '#/definitions/Order'\n *     responses:\n *       200:\n *         description: Successfully updated successfully\n *       400:\n *         description: 'No order with that id found'\n */\n\n\nrouter.get('/caterer/:id', requireAuth, orderController.allOrders);\nrouter.post('/', requireAuth, orderController.create);\nrouter.put('/:id', requireAuth, orderController.editOrder);\nexport default router;\n"],"file":"order.js"}